apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  labels:
    app: ${SERVICE_NAME}
spec:
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
        version: ${IMAGE_TAG}
        tags.datadoghq.com/service: "${SERVICE_NAME}"
        tags.datadoghq.com/version: "${IMAGE_TAG}"
    spec:
      containers:
        - name: ${SERVICE_NAME}
          envFrom:
            - configMapRef:
                name: ${SERVICE_NAME}
                optional: true
            - secretRef:
                name: ${SERVICE_NAME}
                optional: true
            - secretRef:
                name: shared-config
                optional: true
          env:
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          image: ${IMAGE_URI}:${IMAGE_TAG}
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
            - name: grpc
              containerPort: 50051
      imagePullSecrets:
        - name: dpr-secret
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
